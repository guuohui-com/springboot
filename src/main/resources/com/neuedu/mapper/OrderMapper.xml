<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.pojo.Order" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="BIGINT" />
    <result column="shipping_id" property="shippingId" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="DECIMAL" />
    <result column="payment_type" property="paymentType" jdbcType="INTEGER" />
    <result column="postage" property="postage" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from neuedu_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.pojo.Order" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into neuedu_order (id, user_id, order_no, 
      shipping_id, payment, payment_type, 
      postage, status, payment_time, 
      send_time, end_time, close_time, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, 
      #{shippingId,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, #{paymentType,jdbcType=INTEGER}, 
      #{postage,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}, 
      now(), now())
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.pojo.Order" >
    update neuedu_order
    set user_id = #{userId,jdbcType=INTEGER},
      shipping_id = #{shippingId,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=INTEGER},
      postage = #{postage,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status, 
    payment_time, send_time, end_time, close_time, create_time, update_time
    from neuedu_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status, 
    payment_time, send_time, end_time, close_time, create_time, update_time
    from neuedu_order
  </select>


  <select id="findByUserIdAndOrderNo" parameterType="map" resultMap="BaseResultMap" >
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
    payment_time, send_time, end_time, close_time, create_time, update_time
    from neuedu_order
    WHERE user_id=#{userId} and order_no=#{orderNo}
  </select>


  <!--根据userId分页查询Order-->
  <select id="findOrderBuyUserId" parameterType="map" resultMap="BaseResultMap">
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
    payment_time, send_time, end_time, close_time, create_time, update_time
    from neuedu_order
    WHERE user_id=#{userId}
    limit #{start},#{size}
  </select>

  <!--根据userId分页查询待付款Order-->
  <select id="findWaitPayOrderBuyUserId" parameterType="map" resultMap="BaseResultMap">
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
    payment_time, send_time, end_time, close_time, create_time, update_time
    from neuedu_order
    WHERE user_id=#{userId} and status=10
    limit #{start},#{size}
  </select>

  <!--根据userId分页查询待付款Order-->
  <select id="findWaitReceiveOrderBuyUserId" parameterType="map" resultMap="BaseResultMap">
    select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
    payment_time, send_time, end_time, close_time, create_time, update_time
    from neuedu_order
    WHERE user_id=#{userId} and  status BETWEEN 20 and 40
     limit #{start},#{size}
  </select>

  <!--根据userId查询所有Order-->
  <select id="findOrderCountBuyUserId" parameterType="int" resultType="int">
    select count(1)
    from neuedu_order
    WHERE user_id=#{userId}
  </select>

  <select id="findBuOrderNo" parameterType="long" resultMap="BaseResultMap">
     select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
    payment_time, send_time, end_time, close_time, create_time, update_time
    from neuedu_order
    WHERE order_no=#{orderNo}
  </select>

  <select id="findCloseOrdersByCreatTime"  resultMap="BaseResultMap">
      select id, user_id, order_no, shipping_id, payment, payment_type, postage, status,
      payment_time, send_time, end_time, close_time, create_time, update_time
      from neuedu_order
      WHERE
      <![CDATA[
      create_time<=#{time}
      ]]>
  </select>

  <update id="closeOrder" parameterType="int">
     update neuedu_order
    set
      status =60,
      update_time = now()
    where id = #{orderId} and status=10
  </update>



</mapper>